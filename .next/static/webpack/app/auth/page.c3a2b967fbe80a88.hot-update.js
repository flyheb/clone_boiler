"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/page",{

/***/ "(app-pages-browser)/./hooks/use-supabase-auth.ts":
/*!************************************!*\
  !*** ./hooks/use-supabase-auth.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSupabaseAuth: () => (/* binding */ useSupabaseAuth)\n/* harmony export */ });\n/* harmony import */ var _utils_supabase_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/supabase/client */ \"(app-pages-browser)/./utils/supabase/client.ts\");\n\nfunction useSupabaseAuth() {\n    const supabase = (0,_utils_supabase_client__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n    const signInWithOAuth = async (provider)=>{\n        try {\n            const { data, error } = await supabase.auth.signInWithOAuth({\n                provider,\n                options: {\n                    redirectTo: \"\".concat(window.location.origin, \"/auth/callback\")\n                }\n            });\n            if (error) {\n                console.error('Erro OAuth:', error.message);\n            }\n            return {\n                data,\n                error\n            };\n        } catch (err) {\n            console.error('Erro inesperado OAuth:', err);\n            return {\n                data: null,\n                error: err\n            };\n        }\n    };\n    const signInWithEmail = async (email, password)=>{\n        try {\n            const { data, error } = await supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            if (error) {\n                console.error('Erro login:', error.message);\n            }\n            return {\n                data,\n                error\n            };\n        } catch (err) {\n            console.error('Erro inesperado login:', err);\n            return {\n                data: null,\n                error: err\n            };\n        }\n    };\n    const signUpWithEmail = async (email, password, name)=>{\n        try {\n            const { data, error } = await supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: {\n                        full_name: name\n                    }\n                }\n            });\n            if (error) {\n                console.error('Erro no cadastro:', error);\n                return {\n                    data: null,\n                    error\n                };\n            }\n            console.log('Resposta do cadastro:', data);\n            return {\n                data,\n                error: null\n            };\n        } catch (err) {\n            console.error('Erro inesperado no cadastro:', err);\n            return {\n                data: null,\n                error: err\n            };\n        }\n    };\n    const signOut = async ()=>{\n        try {\n            const { error } = await supabase.auth.signOut();\n            return {\n                error\n            };\n        } catch (err) {\n            console.error('Erro ao fazer logout:', err);\n            return {\n                error: err\n            };\n        }\n    };\n    return {\n        signInWithOAuth,\n        signInWithEmail,\n        signUpWithEmail,\n        signOut\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZS1zdXBhYmFzZS1hdXRoLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNEO0FBRy9DLFNBQVNDO0lBQ2QsTUFBTUMsV0FBV0Ysb0VBQVlBO0lBRTdCLE1BQU1HLGtCQUFrQixPQUFPQztRQUM3QixJQUFJO1lBQ0YsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1KLFNBQVNLLElBQUksQ0FBQ0osZUFBZSxDQUFDO2dCQUMxREM7Z0JBQ0FJLFNBQVM7b0JBQ1BDLFlBQVksR0FBMEIsT0FBdkJDLE9BQU9DLFFBQVEsQ0FBQ0MsTUFBTSxFQUFDO2dCQUN4QztZQUNGO1lBQ0EsSUFBSU4sT0FBTztnQkFDVE8sUUFBUVAsS0FBSyxDQUFDLGVBQWVBLE1BQU1RLE9BQU87WUFDNUM7WUFDQSxPQUFPO2dCQUFFVDtnQkFBTUM7WUFBTTtRQUN2QixFQUFFLE9BQU9TLEtBQUs7WUFDWkYsUUFBUVAsS0FBSyxDQUFDLDBCQUEwQlM7WUFDeEMsT0FBTztnQkFBRVYsTUFBTTtnQkFBTUMsT0FBT1M7WUFBYTtRQUMzQztJQUNGO0lBRUEsTUFBTUMsa0JBQWtCLE9BQU9DLE9BQWVDO1FBQzVDLElBQUk7WUFDRixNQUFNLEVBQUViLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTUosU0FBU0ssSUFBSSxDQUFDWSxrQkFBa0IsQ0FBQztnQkFDN0RGO2dCQUNBQztZQUNGO1lBQ0EsSUFBSVosT0FBTztnQkFDVE8sUUFBUVAsS0FBSyxDQUFDLGVBQWVBLE1BQU1RLE9BQU87WUFDNUM7WUFDQSxPQUFPO2dCQUFFVDtnQkFBTUM7WUFBTTtRQUN2QixFQUFFLE9BQU9TLEtBQUs7WUFDWkYsUUFBUVAsS0FBSyxDQUFDLDBCQUEwQlM7WUFDeEMsT0FBTztnQkFBRVYsTUFBTTtnQkFBTUMsT0FBT1M7WUFBYTtRQUMzQztJQUNGO0lBRUEsTUFBTUssa0JBQWtCLE9BQU9ILE9BQWVDLFVBQWtCRztRQUM5RCxJQUFJO1lBQ0YsTUFBTSxFQUFFaEIsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNSixTQUFTSyxJQUFJLENBQUNlLE1BQU0sQ0FBQztnQkFDakRMO2dCQUNBQztnQkFDQVYsU0FBUztvQkFDUEgsTUFBTTt3QkFDSmtCLFdBQVdGO29CQUNiO2dCQUNGO1lBQ0Y7WUFFQSxJQUFJZixPQUFPO2dCQUNUTyxRQUFRUCxLQUFLLENBQUMscUJBQXFCQTtnQkFDbkMsT0FBTztvQkFBRUQsTUFBTTtvQkFBTUM7Z0JBQU07WUFDN0I7WUFFQU8sUUFBUVcsR0FBRyxDQUFDLHlCQUF5Qm5CO1lBQ3JDLE9BQU87Z0JBQUVBO2dCQUFNQyxPQUFPO1lBQUs7UUFDN0IsRUFBRSxPQUFPUyxLQUFLO1lBQ1pGLFFBQVFQLEtBQUssQ0FBQyxnQ0FBZ0NTO1lBQzlDLE9BQU87Z0JBQUVWLE1BQU07Z0JBQU1DLE9BQU9TO1lBQWE7UUFDM0M7SUFDRjtJQUVBLE1BQU1VLFVBQVU7UUFDZCxJQUFJO1lBQ0YsTUFBTSxFQUFFbkIsS0FBSyxFQUFFLEdBQUcsTUFBTUosU0FBU0ssSUFBSSxDQUFDa0IsT0FBTztZQUM3QyxPQUFPO2dCQUFFbkI7WUFBTTtRQUNqQixFQUFFLE9BQU9TLEtBQUs7WUFDWkYsUUFBUVAsS0FBSyxDQUFDLHlCQUF5QlM7WUFDdkMsT0FBTztnQkFBRVQsT0FBT1M7WUFBYTtRQUMvQjtJQUNGO0lBRUEsT0FBTztRQUNMWjtRQUNBYTtRQUNBSTtRQUNBSztJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2d1c3Rhdm8vcHJvamV0by10ZXN0ZS9jbG9uZV9ib2lsZXIvaG9va3MvdXNlLXN1cGFiYXNlLWF1dGgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQC91dGlscy9zdXBhYmFzZS9jbGllbnQnXG5pbXBvcnQgeyB0eXBlIFByb3ZpZGVyIH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJ1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlU3VwYWJhc2VBdXRoKCkge1xuICBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudCgpXG5cbiAgY29uc3Qgc2lnbkluV2l0aE9BdXRoID0gYXN5bmMgKHByb3ZpZGVyOiBQcm92aWRlcikgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnNpZ25JbldpdGhPQXV0aCh7XG4gICAgICAgIHByb3ZpZGVyLFxuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgcmVkaXJlY3RUbzogYCR7d2luZG93LmxvY2F0aW9uLm9yaWdpbn0vYXV0aC9jYWxsYmFja2AsXG4gICAgICAgIH0sXG4gICAgICB9KVxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gT0F1dGg6JywgZXJyb3IubWVzc2FnZSlcbiAgICAgIH1cbiAgICAgIHJldHVybiB7IGRhdGEsIGVycm9yIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gaW5lc3BlcmFkbyBPQXV0aDonLCBlcnIpXG4gICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvcjogZXJyIGFzIEVycm9yIH1cbiAgICB9XG4gIH1cblxuICBjb25zdCBzaWduSW5XaXRoRW1haWwgPSBhc3luYyAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnNpZ25JbldpdGhQYXNzd29yZCh7XG4gICAgICAgIGVtYWlsLFxuICAgICAgICBwYXNzd29yZCxcbiAgICAgIH0pXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJybyBsb2dpbjonLCBlcnJvci5tZXNzYWdlKVxuICAgICAgfVxuICAgICAgcmV0dXJuIHsgZGF0YSwgZXJyb3IgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJybyBpbmVzcGVyYWRvIGxvZ2luOicsIGVycilcbiAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yOiBlcnIgYXMgRXJyb3IgfVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHNpZ25VcFdpdGhFbWFpbCA9IGFzeW5jIChlbWFpbDogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nLCBuYW1lOiBzdHJpbmcpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduVXAoe1xuICAgICAgICBlbWFpbCxcbiAgICAgICAgcGFzc3dvcmQsXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBmdWxsX25hbWU6IG5hbWVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvIG5vIGNhZGFzdHJvOicsIGVycm9yKVxuICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9XG4gICAgICB9XG5cbiAgICAgIGNvbnNvbGUubG9nKCdSZXNwb3N0YSBkbyBjYWRhc3RybzonLCBkYXRhKVxuICAgICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJybyBpbmVzcGVyYWRvIG5vIGNhZGFzdHJvOicsIGVycilcbiAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yOiBlcnIgYXMgRXJyb3IgfVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHNpZ25PdXQgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnbk91dCgpXG4gICAgICByZXR1cm4geyBlcnJvciB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIGZhemVyIGxvZ291dDonLCBlcnIpXG4gICAgICByZXR1cm4geyBlcnJvcjogZXJyIGFzIEVycm9yIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNpZ25JbldpdGhPQXV0aCxcbiAgICBzaWduSW5XaXRoRW1haWwsXG4gICAgc2lnblVwV2l0aEVtYWlsLFxuICAgIHNpZ25PdXQsXG4gIH1cbn0gIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInVzZVN1cGFiYXNlQXV0aCIsInN1cGFiYXNlIiwic2lnbkluV2l0aE9BdXRoIiwicHJvdmlkZXIiLCJkYXRhIiwiZXJyb3IiLCJhdXRoIiwib3B0aW9ucyIsInJlZGlyZWN0VG8iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsImNvbnNvbGUiLCJtZXNzYWdlIiwiZXJyIiwic2lnbkluV2l0aEVtYWlsIiwiZW1haWwiLCJwYXNzd29yZCIsInNpZ25JbldpdGhQYXNzd29yZCIsInNpZ25VcFdpdGhFbWFpbCIsIm5hbWUiLCJzaWduVXAiLCJmdWxsX25hbWUiLCJsb2ciLCJzaWduT3V0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-supabase-auth.ts\n"));

/***/ })

});